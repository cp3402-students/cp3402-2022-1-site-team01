{"version":3,"sources":["../../src/languages/sparksql.formatter.ts"],"names":["reservedFunctions","aggregate","window","array","map","datetime","json","misc","reservedKeywords","reservedCommands","reservedBinaryCommands","reservedDependentClauses","SparkSqlFormatter","Tokenizer","reservedJoinConditions","reservedLogicalOperators","stringTypes","blockStart","blockEnd","indexedPlaceholderTypes","namedPlaceholderTypes","lineCommentTypes","operators","token","isToken","WINDOW","tokenLookAhead","type","TokenType","BLOCK_START","RESERVED_KEYWORD","value","END","tokenLookBehind","WORD","test","Formatter","Object","values","reduce","acc","arr"],"mappings":"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","sourcesContent":["import Formatter from '../core/Formatter';\nimport Tokenizer from '../core/Tokenizer';\nimport { isToken, Token, TokenType } from '../core/token'; // convert to partial type import in TS 4.5\nimport type { StringPatternType } from '../core/regexFactory';\nimport { dedupe } from '../utils';\n\n/**\n * Priority 5 (last)\n * Full list of reserved functions\n * distinct from Keywords due to interaction with parentheses\n */\n// http://spark.apache.org/docs/latest/sql-ref-functions.html\nconst reservedFunctions = {\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#aggregate-functions\n  aggregate: [\n    'ANY',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_PERCENTILE',\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'BOOL_AND',\n    'BOOL_OR',\n    'COLLECT_LIST',\n    'COLLECT_SET',\n    'CORR',\n    'COUNT',\n    'COUNT',\n    'COUNT',\n    'COUNT_IF',\n    'COUNT_MIN_SKETCH',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'EVERY',\n    'FIRST',\n    'FIRST_VALUE',\n    'GROUPING',\n    'GROUPING_ID',\n    'KURTOSIS',\n    'LAST',\n    'LAST_VALUE',\n    'MAX',\n    'MAX_BY',\n    'MEAN',\n    'MIN',\n    'MIN_BY',\n    'PERCENTILE',\n    'PERCENTILE',\n    'PERCENTILE_APPROX',\n    'SKEWNESS',\n    'SOME',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n  ],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#window-functions\n  window: [\n    'CUME_DIST',\n    'DENSE_RANK',\n    'LAG',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'RANK',\n    'ROW_NUMBER',\n  ],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#array-functions\n  array: [\n    'ARRAY',\n    'ARRAY_CONTAINS',\n    'ARRAY_DISTINCT',\n    'ARRAY_EXCEPT',\n    'ARRAY_INTERSECT',\n    'ARRAY_JOIN',\n    'ARRAY_MAX',\n    'ARRAY_MIN',\n    'ARRAY_POSITION',\n    'ARRAY_REMOVE',\n    'ARRAY_REPEAT',\n    'ARRAY_UNION',\n    'ARRAYS_OVERLAP',\n    'ARRAYS_ZIP',\n    'FLATTEN',\n    'SEQUENCE',\n    'SHUFFLE',\n    'SLICE',\n    'SORT_ARRAY',\n  ],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#map-functions\n  map: [\n    'ELEMENT_AT',\n    'ELEMENT_AT',\n    'MAP',\n    'MAP_CONCAT',\n    'MAP_ENTRIES',\n    'MAP_FROM_ARRAYS',\n    'MAP_FROM_ENTRIES',\n    'MAP_KEYS',\n    'MAP_VALUES',\n    'STR_TO_MAP',\n  ],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#date-and-timestamp-functions\n  datetime: [\n    'ADD_MONTHS',\n    'CURRENT_DATE',\n    'CURRENT_DATE',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_FROM_UNIX_DATE',\n    'DATE_PART',\n    'DATE_SUB',\n    'DATE_TRUNC',\n    'DATEDIFF',\n    'DAY',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'EXTRACT',\n    'FROM_UNIXTIME',\n    'FROM_UTC_TIMESTAMP',\n    'HOUR',\n    'LAST_DAY',\n    'MAKE_DATE',\n    'MAKE_DT_INTERVAL',\n    'MAKE_INTERVAL',\n    'MAKE_TIMESTAMP',\n    'MAKE_YM_INTERVAL',\n    'MINUTE',\n    'MONTH',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'NOW',\n    'QUARTER',\n    'SECOND',\n    'SESSION_WINDOW',\n    'TIMESTAMP_MICROS',\n    'TIMESTAMP_MILLIS',\n    'TIMESTAMP_SECONDS',\n    'TO_DATE',\n    'TO_TIMESTAMP',\n    'TO_UNIX_TIMESTAMP',\n    'TO_UTC_TIMESTAMP',\n    'TRUNC',\n    'UNIX_DATE',\n    'UNIX_MICROS',\n    'UNIX_MILLIS',\n    'UNIX_SECONDS',\n    'UNIX_TIMESTAMP',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WINDOW',\n    'YEAR',\n  ],\n  // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#json-functions\n  json: [\n    'FROM_JSON',\n    'GET_JSON_OBJECT',\n    'JSON_ARRAY_LENGTH',\n    'JSON_OBJECT_KEYS',\n    'JSON_TUPLE',\n    'SCHEMA_OF_JSON',\n    'TO_JSON',\n  ],\n  // http://spark.apache.org/docs/latest/api/sql/index.html\n  misc: [\n    'ABS',\n    'ACOS',\n    'ACOSH',\n    'AGGREGATE',\n    'ARRAY_SORT',\n    'ASCII',\n    'ASIN',\n    'ASINH',\n    'ASSERT_TRUE',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'BASE64',\n    'BIGINT',\n    'BIN',\n    'BINARY',\n    'BIT_COUNT',\n    'BIT_GET',\n    'BIT_LENGTH',\n    'BOOLEAN',\n    'BROUND',\n    'BTRIM',\n    'CARDINALITY',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CHAR',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONV',\n    'COS',\n    'COSH',\n    'COT',\n    'CRC32',\n    'CURRENT_CATALOG',\n    'CURRENT_DATABASE',\n    'CURRENT_USER',\n    'DATE',\n    'DECIMAL',\n    'DEGREES',\n    'DOUBLE',\n    // 'E',\n    'ELT',\n    'EXP',\n    'EXPM1',\n    'FACTORIAL',\n    'FIND_IN_SET',\n    'FLOAT',\n    'FLOOR',\n    'FORALL',\n    'FORMAT_NUMBER',\n    'FORMAT_STRING',\n    'FROM_CSV',\n    'GETBIT',\n    'HASH',\n    'HEX',\n    'HYPOT',\n    'INITCAP',\n    'INLINE',\n    'INLINE_OUTER',\n    'INPUT_FILE_BLOCK_LENGTH',\n    'INPUT_FILE_BLOCK_START',\n    'INPUT_FILE_NAME',\n    'INSTR',\n    'INT',\n    'ISNAN',\n    'ISNOTNULL',\n    'ISNULL',\n    'JAVA_METHOD',\n    'LCASE',\n    'LEFT',\n    'LENGTH',\n    'LEVENSHTEIN',\n    'LN',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG1P',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAP_FILTER',\n    'MAP_ZIP_WITH',\n    'MD5',\n    'MOD',\n    'MONOTONICALLY_INCREASING_ID',\n    'NAMED_STRUCT',\n    'NANVL',\n    'NEGATIVE',\n    'NVL',\n    'NVL2',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PARSE_URL',\n    'PI',\n    'PMOD',\n    'POSEXPLODE',\n    'POSEXPLODE_OUTER',\n    'POSITION',\n    'POSITIVE',\n    'POW',\n    'POWER',\n    'PRINTF',\n    'RADIANS',\n    'RAISE_ERROR',\n    'RAND',\n    'RANDN',\n    'RANDOM',\n    'REFLECT',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RINT',\n    'ROUND',\n    'RPAD',\n    'RTRIM',\n    'SCHEMA_OF_CSV',\n    'SENTENCES',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SHIFTLEFT',\n    'SHIFTRIGHT',\n    'SHIFTRIGHTUNSIGNED',\n    'SIGN',\n    'SIGNUM',\n    'SIN',\n    'SINH',\n    'SMALLINT',\n    'SOUNDEX',\n    'SPACE',\n    'SPARK_PARTITION_ID',\n    'SPLIT',\n    'SQRT',\n    'STACK',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'TAN',\n    'TANH',\n    'TIMESTAMP',\n    'TINYINT',\n    'TO_CSV',\n    'TRANSFORM_KEYS',\n    'TRANSFORM_VALUES',\n    'TRANSLATE',\n    'TRIM',\n    'TRY_ADD',\n    'TRY_DIVIDE',\n    'TYPEOF',\n    'UCASE',\n    'UNBASE64',\n    'UNHEX',\n    'UPPER',\n    'UUID',\n    'VERSION',\n    'WIDTH_BUCKET',\n    'XPATH',\n    'XPATH_BOOLEAN',\n    'XPATH_DOUBLE',\n    'XPATH_FLOAT',\n    'XPATH_INT',\n    'XPATH_LONG',\n    'XPATH_NUMBER',\n    'XPATH_SHORT',\n    'XPATH_STRING',\n    'XXHASH64',\n    'ZIP_WITH',\n  ],\n};\n\n/**\n * Priority 5 (last)\n * Full list of reserved words\n * any words that are in a higher priority are removed\n */\n// https://deepkb.com/CO_000013/en/kb/IMPORT-fbfa59f0-2bf1-31fe-bb7b-0f9efe9932c6/spark-sql-keywords\nconst reservedKeywords = [\n  'ADD',\n  'AFTER',\n  'ALL',\n  'ALTER',\n  'ANALYZE',\n  'AND',\n  'ANTI',\n  'ANY',\n  'ARCHIVE',\n  'ARRAY',\n  'AS',\n  'ASC',\n  'AT',\n  'AUTHORIZATION',\n  'BETWEEN',\n  'BOTH',\n  'BUCKET',\n  'BUCKETS',\n  'BY',\n  'CACHE',\n  'CASCADE',\n  'CAST',\n  'CHANGE',\n  'CHECK',\n  'CLEAR',\n  'CLUSTER',\n  'CLUSTERED',\n  'CODEGEN',\n  'COLLATE',\n  'COLLECTION',\n  'COLUMN',\n  'COLUMNS',\n  'COMMENT',\n  'COMMIT',\n  'COMPACT',\n  'COMPACTIONS',\n  'COMPUTE',\n  'CONCATENATE',\n  'CONSTRAINT',\n  'COST',\n  'CREATE',\n  'CROSS',\n  'CUBE',\n  'CURRENT',\n  'CURRENT_DATE',\n  'CURRENT_TIME',\n  'CURRENT_TIMESTAMP',\n  'CURRENT_USER',\n  'DATA',\n  'DATABASE',\n  'DATABASES',\n  'DAY',\n  'DBPROPERTIES',\n  'DEFINED',\n  'DELETE',\n  'DELIMITED',\n  'DESC',\n  'DESCRIBE',\n  'DFS',\n  'DIRECTORIES',\n  'DIRECTORY',\n  'DISTINCT',\n  'DISTRIBUTE',\n  'DIV',\n  'DROP',\n  'ESCAPE',\n  'ESCAPED',\n  'EXCEPT',\n  'EXCHANGE',\n  'EXISTS',\n  'EXPORT',\n  'EXTENDED',\n  'EXTERNAL',\n  'EXTRACT',\n  'FALSE',\n  'FETCH',\n  'FIELDS',\n  'FILTER',\n  'FILEFORMAT',\n  'FIRST',\n  'FIRST_VALUE',\n  'FOLLOWING',\n  'FOR',\n  'FOREIGN',\n  'FORMAT',\n  'FORMATTED',\n  'FULL',\n  'FUNCTION',\n  'FUNCTIONS',\n  'GLOBAL',\n  'GRANT',\n  'GROUP',\n  'GROUPING',\n  'HOUR',\n  'IF',\n  'IGNORE',\n  'IMPORT',\n  'IN',\n  'INDEX',\n  'INDEXES',\n  'INNER',\n  'INPATH',\n  'INPUTFORMAT',\n  'INTERSECT',\n  'INTERVAL',\n  'INTO',\n  'IS',\n  'ITEMS',\n  'KEYS',\n  'LAST',\n  'LAST_VALUE',\n  'LATERAL',\n  'LAZY',\n  'LEADING',\n  'LEFT',\n  'LIKE',\n  'LINES',\n  'LIST',\n  'LOCAL',\n  'LOCATION',\n  'LOCK',\n  'LOCKS',\n  'LOGICAL',\n  'MACRO',\n  'MAP',\n  'MATCHED',\n  'MERGE',\n  'MINUTE',\n  'MONTH',\n  'MSCK',\n  'NAMESPACE',\n  'NAMESPACES',\n  'NATURAL',\n  'NO',\n  'NOT',\n  'NULL',\n  'NULLS',\n  'OF',\n  'ONLY',\n  'OPTION',\n  'OPTIONS',\n  'OR',\n  'ORDER',\n  'OUT',\n  'OUTER',\n  'OUTPUTFORMAT',\n  'OVER',\n  'OVERLAPS',\n  'OVERLAY',\n  'OVERWRITE',\n  'OWNER',\n  'PARTITION',\n  'PARTITIONED',\n  'PARTITIONS',\n  'PERCENT',\n  'PLACING',\n  'POSITION',\n  'PRECEDING',\n  'PRIMARY',\n  'PRINCIPALS',\n  'PROPERTIES',\n  'PURGE',\n  'QUERY',\n  'RANGE',\n  'RECORDREADER',\n  'RECORDWRITER',\n  'RECOVER',\n  'REDUCE',\n  'REFERENCES',\n  'RENAME',\n  'REPAIR',\n  'REPLACE',\n  'RESPECT',\n  'RESTRICT',\n  'REVOKE',\n  'RIGHT',\n  'RLIKE',\n  'ROLE',\n  'ROLES',\n  'ROLLBACK',\n  'ROLLUP',\n  'ROW',\n  'ROWS',\n  'SCHEMA',\n  'SECOND',\n  'SELECT',\n  'SEMI',\n  'SEPARATED',\n  'SERDE',\n  'SERDEPROPERTIES',\n  'SESSION_USER',\n  'SETS',\n  'SHOW',\n  'SKEWED',\n  'SOME',\n  'SORT',\n  'SORTED',\n  'START',\n  'STATISTICS',\n  'STORED',\n  'STRATIFY',\n  'STRUCT',\n  'SUBSTR',\n  'SUBSTRING',\n  'TABLE',\n  'TABLES',\n  'TBLPROPERTIES',\n  'TEMPORARY',\n  'TERMINATED',\n  'THEN',\n  'TO',\n  'TOUCH',\n  'TRAILING',\n  'TRANSACTION',\n  'TRANSACTIONS',\n  'TRIM',\n  'TRUE',\n  'TRUNCATE',\n  'UNARCHIVE',\n  'UNBOUNDED',\n  'UNCACHE',\n  'UNIQUE',\n  'UNKNOWN',\n  'UNLOCK',\n  'UNSET',\n  'USE',\n  'USER',\n  'VIEW',\n  'WINDOW',\n  'YEAR',\n  // other\n  'ANALYSE',\n  'ARRAY_ZIP',\n  'COALESCE',\n  'CONTAINS',\n  'CONVERT',\n  'CURRENT ROW',\n  'DAYS',\n  'DAY_HOUR',\n  'DAY_MINUTE',\n  'DAY_SECOND',\n  'DECODE',\n  'DEFAULT',\n  'DISTINCTROW',\n  'ENCODE',\n  'EXPLODE',\n  'EXPLODE_OUTER',\n  'FIXED',\n  'GREATEST',\n  'GROUP_CONCAT',\n  'HOURS',\n  'HOUR_MINUTE',\n  'HOUR_SECOND',\n  'IFNULL',\n  'LEAST',\n  'LEVEL',\n  'MINUTE_SECOND',\n  'NULLIF',\n  'OFFSET',\n  'ON DELETE',\n  'ON UPDATE',\n  'OPTIMIZE',\n  'REGEXP',\n  'SEPARATOR',\n  'SIZE',\n  'STRING',\n  'TYPE',\n  'TYPES',\n  'UNSIGNED',\n  'VARIABLES',\n  'YEAR_MONTH',\n];\n\n/**\n * Priority 1 (first)\n * keywords that begin a new statement\n * will begin new indented block\n */\n// http://spark.apache.org/docs/latest/sql-ref-syntax.html\nconst reservedCommands = [\n  // DDL\n  'ALTER COLUMN',\n  'ALTER DATABASE',\n  'ALTER TABLE',\n  'ALTER VIEW',\n  'CREATE DATABASE',\n  'CREATE FUNCTION',\n  'CREATE TABLE',\n  'CREATE VIEW',\n  'DROP DATABASE',\n  'DROP FUNCTION',\n  'DROP TABLE',\n  'DROP VIEW',\n  'REPAIR TABLE',\n  'TRUNCATE TABLE',\n  'USE DATABASE',\n  // DML\n  'INSERT INTO',\n  'INSERT OVERWRITE',\n  'INSERT OVERWRITE DIRECTORY',\n  'LOAD',\n  // Data Retrieval\n  'SELECT',\n  'WITH',\n  'CLUSTER BY',\n  'DISTRIBUTE BY',\n  'PARTITION BY', // verify\n  'GROUP BY',\n  'HAVING',\n  'VALUES',\n  'LIMIT',\n  'OFFSET',\n  'ORDER BY',\n  'SORT BY',\n  'TABLESAMPLE',\n  'WHERE',\n  'PIVOT',\n  'TRANSFORM',\n  'EXPLAIN',\n  // Auxiliary\n  'ADD FILE',\n  'ADD JAR',\n  'ANALYZE TABLE',\n  'CACHE TABLE',\n  'CLEAR CACHE',\n  'DESCRIBE DATABASE',\n  'DESCRIBE FUNCTION',\n  'DESCRIBE QUERY',\n  'DESCRIBE TABLE',\n  'LIST FILE',\n  'LIST JAR',\n  'REFRESH',\n  'REFRESH TABLE',\n  'REFRESH FUNCTION',\n  'RESET',\n  'SET',\n  'SET SCHEMA', // verify\n  'SHOW COLUMNS',\n  'SHOW CREATE TABLE',\n  'SHOW DATABASES',\n  'SHOW FUNCTIONS',\n  'SHOW PARTITIONS',\n  'SHOW TABLE EXTENDED',\n  'SHOW TABLES',\n  'SHOW TBLPROPERTIES',\n  'SHOW VIEWS',\n  'UNCACHE TABLE',\n  // other\n  'FROM',\n  'INSERT',\n  'LATERAL VIEW',\n  'UPDATE',\n  'WINDOW', // verify\n];\n\n/**\n * Priority 2\n * commands that operate on two tables or subqueries\n * two main categories: joins and boolean set operators\n */\nconst reservedBinaryCommands = [\n  // set booleans\n  'INTERSECT',\n  'INTERSECT ALL',\n  'INTERSECT DISTINCT',\n  'UNION',\n  'UNION ALL',\n  'UNION DISTINCT',\n  'EXCEPT',\n  'EXCEPT ALL',\n  'EXCEPT DISTINCT',\n  'MINUS',\n  'MINUS ALL',\n  'MINUS DISTINCT',\n  // joins\n  'JOIN',\n  'INNER JOIN',\n  'LEFT JOIN',\n  'LEFT OUTER JOIN',\n  'RIGHT JOIN',\n  'RIGHT OUTER JOIN',\n  'FULL JOIN',\n  'FULL OUTER JOIN',\n  'CROSS JOIN',\n  'NATURAL JOIN',\n  // apply\n  'CROSS APPLY',\n  'OUTER APPLY',\n  // non-standard-joins\n  'ANTI JOIN',\n  'SEMI JOIN',\n  'LEFT ANTI JOIN',\n  'LEFT SEMI JOIN',\n  'RIGHT OUTER JOIN',\n  'RIGHT SEMI JOIN',\n  'NATURAL ANTI JOIN',\n  'NATURAL FULL OUTER JOIN',\n  'NATURAL INNER JOIN',\n  'NATURAL LEFT ANTI JOIN',\n  'NATURAL LEFT OUTER JOIN',\n  'NATURAL LEFT SEMI JOIN',\n  'NATURAL OUTER JOIN',\n  'NATURAL RIGHT OUTER JOIN',\n  'NATURAL RIGHT SEMI JOIN',\n  'NATURAL SEMI JOIN',\n  'CROSS APPLY',\n  'OUTER APPLY',\n];\n\n/**\n * Priority 3\n * keywords that follow a previous Statement, must be attached to subsequent data\n * can be fully inline or on newline with optional indent\n */\nconst reservedDependentClauses = ['WHEN', 'ELSE'];\n\n// http://spark.apache.org/docs/latest/sql-programming-guide.html\nexport default class SparkSqlFormatter extends Formatter {\n  static reservedCommands = reservedCommands;\n  static reservedBinaryCommands = reservedBinaryCommands;\n  static reservedDependentClauses = reservedDependentClauses;\n  static reservedJoinConditions = ['ON', 'USING'];\n  static reservedLogicalOperators = ['AND', 'OR', 'XOR'];\n  static reservedKeywords = dedupe([\n    ...Object.values(reservedFunctions).reduce((acc, arr) => [...acc, ...arr], []),\n    ...reservedKeywords,\n  ]);\n  static stringTypes: StringPatternType[] = [`\"\"`, \"''\", '``', '{}'];\n  static blockStart = ['(', 'CASE'];\n  static blockEnd = [')', 'END'];\n  static indexedPlaceholderTypes = ['?'];\n  static namedPlaceholderTypes = ['$'];\n  static lineCommentTypes = ['--'];\n  static operators = ['<=>', '&&', '||', '==', '->'];\n\n  tokenizer() {\n    return new Tokenizer({\n      reservedCommands: SparkSqlFormatter.reservedCommands,\n      reservedBinaryCommands: SparkSqlFormatter.reservedBinaryCommands,\n      reservedDependentClauses: SparkSqlFormatter.reservedDependentClauses,\n      reservedJoinConditions: SparkSqlFormatter.reservedJoinConditions,\n      reservedLogicalOperators: SparkSqlFormatter.reservedLogicalOperators,\n      reservedKeywords: SparkSqlFormatter.reservedKeywords,\n      stringTypes: SparkSqlFormatter.stringTypes,\n      blockStart: SparkSqlFormatter.blockStart,\n      blockEnd: SparkSqlFormatter.blockEnd,\n      indexedPlaceholderTypes: SparkSqlFormatter.indexedPlaceholderTypes,\n      namedPlaceholderTypes: SparkSqlFormatter.namedPlaceholderTypes,\n      lineCommentTypes: SparkSqlFormatter.lineCommentTypes,\n      operators: SparkSqlFormatter.operators,\n    });\n  }\n\n  tokenOverride(token: Token) {\n    // [WINDOW](...)\n    if (isToken.WINDOW(token) && this.tokenLookAhead().type === TokenType.BLOCK_START) {\n      // This is a function call, treat it as a reserved word\n      return { type: TokenType.RESERVED_KEYWORD, value: token.value };\n    }\n\n    // .[END]\n    if (isToken.END(token) && this.tokenLookBehind().value === '.') {\n      // This is window().end (or similar) not CASE ... END\n      return { type: TokenType.WORD, value: token.value };\n    }\n\n    // TODO: deprecate this once ITEMS is merged with COLLECTION\n    if (/ITEMS/i.test(token.value) && token.type === TokenType.RESERVED_KEYWORD) {\n      if (\n        !(\n          /COLLECTION/i.test(this.tokenLookBehind().value) &&\n          /TERMINATED/i.test(this.tokenLookAhead().value)\n        )\n      ) {\n        // this is a word and not COLLECTION ITEMS\n        return { type: TokenType.WORD, value: token.value };\n      }\n    }\n\n    return token;\n  }\n}\n"],"file":"sparksql.formatter.js"}