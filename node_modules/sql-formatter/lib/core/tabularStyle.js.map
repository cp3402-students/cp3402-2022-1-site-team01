{"version":3,"sources":["../../src/core/tabularStyle.ts"],"names":["toTabularToken","token","indentStyle","bufferItem","value","tail","length","includes","split","padEnd","ZWS","padStart","join","replaceTabularPlaceholders","query","replace","RegExp"],"mappings":";;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,cAAT,CAAwBC,KAAxB,EAAsCC,WAAtC,EAAuE;AAC5E,MAAIA,WAAW,KAAK,UAApB,EAAgC;AAC9B,WAAOD,KAAP;AACD;;AAED,MAAIE,UAAU,GAAGF,KAAK,CAACG,KAAvB,CAL4E,CAK9C;;AAC9B,MAAIC,IAAI,GAAG,EAAX,CAN4E,CAMjD;;AAC3B,MAAIF,UAAU,CAACG,MAAX,IAAqB,EAArB,IAA2BH,UAAU,CAACI,QAAX,CAAoB,GAApB,CAA/B,EAAyD;AACvD;AADuD,4BAE/BJ,UAAU,CAACK,KAAX,CAAiB,GAAjB,CAF+B;;AAAA;;AAEtDL,IAAAA,UAFsD;AAEvCE,IAAAA,IAFuC;AAGxD;;AAED,MAAIH,WAAW,KAAK,aAApB,EAAmC;AACjCC,IAAAA,UAAU,GAAGA,UAAU,CAACM,MAAX,CAAkB,CAAlB,EAAqBC,UAArB,CAAb;AACD,GAFD,MAEO;AACLP,IAAAA,UAAU,GAAGA,UAAU,CAACQ,QAAX,CAAoB,CAApB,EAAuBD,UAAvB,CAAb;AACD;;AAED,yCACKT,KADL;AAEEG,IAAAA,KAAK,EAAED,UAAU,GAAG,CAAC,EAAD,4BAAQE,IAAR,GAAcO,IAAd,CAAmB,GAAnB;AAFtB;AAID;AAED;AACA;AACA;;;AACO,SAASC,0BAAT,CAAoCC,KAApC,EAA2D;AAChE,SAAOA,KAAK,CAACC,OAAN,CAAc,IAAIC,MAAJ,CAAWN,UAAX,EAAgB,MAAhB,CAAd,EAAuC,GAAvC,CAAP;AACD","sourcesContent":["import { IndentStyle } from '../types';\nimport { Token, ZWS } from './token';\n\n/**\n * When tabular style enabled,\n * produces a 10-char wide version of reserved token.\n *\n * It'll be padded by zero-width space characters\n * instead of normal spaces, so that these spaces will survive\n * trimming of spaces in other parts of formatter.\n * They'll be converted to normal spaces in the end of\n * all the normal formatting with the replaceTabularPlaceholders()\n */\nexport function toTabularToken(token: Token, indentStyle: IndentStyle): Token {\n  if (indentStyle === 'standard') {\n    return token;\n  }\n\n  let bufferItem = token.value; // store which part of keyword receives 10-space buffer\n  let tail = [] as string[]; // rest of keyword\n  if (bufferItem.length >= 10 && bufferItem.includes(' ')) {\n    // split for long keywords like INNER JOIN or UNION DISTINCT\n    [bufferItem, ...tail] = bufferItem.split(' ');\n  }\n\n  if (indentStyle === 'tabularLeft') {\n    bufferItem = bufferItem.padEnd(9, ZWS);\n  } else {\n    bufferItem = bufferItem.padStart(9, ZWS);\n  }\n\n  return {\n    ...token,\n    value: bufferItem + ['', ...tail].join(' '),\n  };\n}\n\n/**\n * Replaces zero-width-spaces added by the above function\n */\nexport function replaceTabularPlaceholders(query: string): string {\n  return query.replace(new RegExp(ZWS, 'ugim'), ' ');\n}\n"],"file":"tabularStyle.js"}